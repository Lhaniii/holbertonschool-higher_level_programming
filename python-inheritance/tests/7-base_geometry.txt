doctest for 7-base_geometry.py

This function prints list in sorted ascending sort

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

================
Test for success
================

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)


=============
Test for fail
=============

>>> bg.area()
TraceBack (most recent call last):
TypeError: area() is not implemented

>>> bg.integer_validator(None, None)
TraceBack (most recent call last):
TypeError: None must be an integer

>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: integer_validator() missing 1
required positional argument: 'value'

>>> bg.integer_validator("Zamdane", (0, 1, 2))
TraceBack (most recent call last):
TypeError: Zamdane must be an integer

>>> bg.integer_validator("name", "Infini")
Traceback (most recent call last):
TypeError: name bust be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -1)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", {1, 2})
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", [1, 2])
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("Zamdane", True)
Traceback (most recent call last)
TypeError: Zamdane must be an integer
